#!/usr/bin/env ruby

# For testing that this file gets loaded
$metric_file_loaded = true

# Example Configuration
#
MetricFu::Configuration.run do |config|
#
#   Configure Metrics
#
#   To configure individual metrics...
#
#   config.configure_metric(:rcov) do |rcov|
#     rcov.enabled = true
#     coverage_file = File.expand_path("coverage/rcov/rcov.txt", Dir.pwd)
#     rcov.external = coverage_file
#   end
#
  config.configure_metric(:cane) do |cane|
    cane.enabled = true
    cane.abc_max = 15         # assignments, branches, conditionals
    cane.line_length = 120
    # cane.no_doc = 'y'       # accept classes with no doc
    # cane.no_readme = 'y'    # accept project without README
  end
#
#   Or, to configure a group of metrics...
#   config.configure_metrics.each do |metric|
#     if [:churn, :flay, :flog].include?(metric.name)
#       metric.enabled = true
#     else
#       metric.enabled = false
#     end
#   end
#
#
#   Configure Formatters
#
#   By default, metric_fu will use the built-in html formatter
#   to generate HTML reports for each metric with pretty graphs.

#   To configure different formatter(s) or output ...
#
#   config.configure_formatter(:html)
#   config.configure_formatter(:yaml, "customreport.yml")
#   config.configure_formatter(MyCustomFormatter)
#
#   MetricFu will attempt to require a custom formatter by
#   fully qualified name based on ruby search path,
#   but you may find that you need to add a require above.
#
#   For instance, to require a formatter in your app's lib directory, add the
#   following line to the top of this file.
#   require './lib/my_custom_formatter.rb'
#
#
#   Configure Graph Engine
#
#   By default, metric_fu uses the bluff graph engine.
#   To configure a different graph engine...
#
#   config.configure_graph_engine(:gchart)
#
end